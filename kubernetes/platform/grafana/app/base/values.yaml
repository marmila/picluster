# grafana helm values (base)
# Use an existing secret for the admin user.
adminUser: ""
adminPassword: ""
admin:
  existingSecret: grafana
  userKey: admin-user
  passwordKey: admin-password

# Install required plugins
plugins:
  - grafana-piechart-panel

# Relabel job name of Grafana's metrics
serviceMonitor:
  enabled: true

# Data sources
datasources:
  datasources.yaml:
    apiVersion: 1
    deleteDatasources:
      - { name: Alertmanager, orgId: 1 }
      - { name: Loki, orgId: 1 }
      - { name: Prometheus, orgId: 1 }
      - { name: Tempo, orgId: 1 }
    datasources:
      - name: Prometheus
        type: prometheus
        uid: prometheus
        access: proxy
        url: http://kube-prometheus-stack-prometheus.kube-prom-stack.svc.cluster.local:9090/prometheus
        isDefault: true
      - name: Alertmanager
        type: alertmanager
        uid: alertmanager
        url: http://kube-prometheus-stack-alertmanager.kube-prom-stack.svc.cluster.local:9093/alertmanager
        jsonData:
          implementation: prometheus
      - name: Loki
        type: loki
        uid: loki
        access: proxy
        url: http://loki-read-headless.loki.svc.cluster.local:3100
        jsonData:
          derivedFields:
            # Traefik traces integration
            # - datasourceUid: tempo
            #   matcherRegex: '"request_X-B3-Traceid":"(\w+)"'
            #   name: TraceID
            #   url: $${__value.raw}
            # NGINX traces integration
            - datasourceUid: tempo
              matcherRegex: '"trace_id": "(\w+)"'
              name: TraceID
              url: $${__value.raw}
      - name: Tempo
        uid: tempo
        type: tempo
        access: proxy
        url: http://tempo-query-frontend-discovery.tempo.svc.cluster.local:3100

##
## Provisioning sidecars
##
sidecar:
  dashboards:
    # Enable dashboard sidecar
    enabled: true
    # Enable discovery in all namespaces
    searchNamespace: ALL
    # Search for ConfigMaps containing `grafana_dashboard` label
    label: grafana_dashboard
    # Annotation containing the folder where sidecar will place the dashboard.
    folderAnnotation: grafana_folder
    provider:
      # disableDelete to activate a import-only behaviour
      disableDelete: true
      # allow Grafana to replicate dashboard structure from filesystem
      foldersFromFilesStructure: true
  datasources:
    # Enable datasource sidecar
    enabled: true
    # Enable discovery in all namespaces
    searchNamespace: ALL
    # Search for ConfigMaps containing `grafana_datasource` label
    label: grafana_datasource
    labelValue: "1"

# Added to use the OIDC client secret from a Kubernetes secret via envFrom
envFromSecrets:
  - grafana-client-secret

grafana.ini:
  server:
    root_url: "https://monitoring.${CLUSTER_DOMAIN}/grafana/"
  auth.generic_oauth:
    enabled: true
    name: Keycloak
    client_id: grafana
    client_secret: $__env{CLIENT_SECRET}
    scopes: openid email profile
    auth_url: "https://sso.${CLUSTER_DOMAIN}/auth/realms/picluster/protocol/openid-connect/auth"
    token_url: "https://sso.${CLUSTER_DOMAIN}/auth/realms/picluster/protocol/openid-connect/token"
    api_url: "https://sso.${CLUSTER_DOMAIN}/auth/realms/picluster/protocol/openid-connect/userinfo"
    email_attribute_path: email
    login_attribute_path: preferred_username

