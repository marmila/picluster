# kube-prom-stack helm values (ingress)

alertmanager:
  ## Configure Ingress
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      # Enable cert-manager to create automatically the SSL certificate and store in Secret
      cert-manager.io/cluster-issuer: ${TLS_ISSUER:=letsencrypt-issuer}
      cert-manager.io/common-name: monitoring.${CLUSTER_DOMAIN}
      # Oauth2-proxy
      nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy.${CLUSTER_DOMAIN}/oauth2/start?rd=https://$host$request_uri
      nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.oauth2-proxy.svc.cluster.local/oauth2/auth
      nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
      nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    path: /alertmanager
    pathType: Prefix
    hosts:
      - monitoring.${CLUSTER_DOMAIN}
    tls:
      - hosts:
        - monitoring.${CLUSTER_DOMAIN}
        secretName: monitoring-tls

prometheus:
  ## Configuring Ingress
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      # Enable cert-manager to create automatically the SSL certificate and store in Secret
      cert-manager.io/cluster-issuer: ${TLS_ISSUER:=letsencrypt-issuer}
      cert-manager.io/common-name: monitoring.${CLUSTER_DOMAIN}
      # Oauth2-proxy
      nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy.${CLUSTER_DOMAIN}/oauth2/start?rd=https://$host$request_uri
      nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.oauth2-proxy.svc.cluster.local/oauth2/auth
      nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
      nginx.ingress.kubernetes.io/auth-response-headers: Authorization

    path: /prometheus
    pathType: Prefix
    hosts:
      - monitoring.${CLUSTER_DOMAIN}
    tls:
      - hosts:
        - monitoring.${CLUSTER_DOMAIN}
        secretName: monitoring-tls