# Increase the k8s api client rate limit to avoid being limited due to increased API usage 
k8sClientRateLimit:
  qps: 50
  burst: 200


# Avoid having to manually restart the Cilium pods on config changes 
operator:
# replicas: 1  # Uncomment this if you only have one node
  rollOutPods: true
  
  # Install operator on master node
  nodeSelector:
    node-role.kubernetes.io/master: "true"

  # Enable prometheus integration for cilium-operator
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true

  # Enable Grafana dashboards for cilium-operator
  dashboards:
    enabled: true
    annotations:
      grafana_folder: Cilium  

rollOutCiliumPods: true

# K8s API service
k8sServiceHost: 10.0.0.11
k8sServicePort: 6443

# Replace Kube-proxy
kubeProxyReplacement: true
kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256

# -- Configure IP Address Management mode.
# ref: https://docs.cilium.io/en/stable/network/concepts/ipam/
ipam:
  operator:
    clusterPoolIPv4PodCIDRList: ["10.42.0.0/16"]

l2announcements:
  enabled: true

externalIPs:
  enabled: true

# Istio configuration
# https://docs.cilium.io/en/latest/network/servicemesh/istio/
# Disable socket lb for non-root ns. This is used to enable Istio routing rules
socketLB:
  hostNamespaceOnly: true
# Istio uses a CNI plugin to implement functionality for both sidecar and ambient modes. 
# To ensure that Cilium does not interfere with other CNI plugins on the node,
cni:
  exclusive: false

# Enable Prometheus integration for cilium-agent
prometheus:
  enabled: true
  serviceMonitor:
    enabled: true
    # scrape interval
    interval: "10s"
    # -- Relabeling configs for the ServiceMonitor hubble
    relabelings:
      - action: replace
        sourceLabels:
          - __meta_kubernetes_pod_node_name
        targetLabel: node
        replacement: ${1}
    trustCRDsExist: true

# Enable Grafana dashboards for cilium-agent
# grafana can import dashboards based on the label and value
# ref: https://github.com/grafana/helm-charts/tree/main/charts/grafana#sidecar-for-dashboards
dashboards:
  enabled: true
  annotations:
    grafana_folder: Cilium

# Enable Hubble
hubble:
  enabled: true

  # Enable Monitoring
  metrics:
    enabled:
      - dns:query
      - drop
      - tcp
      - flow
      - port-distribution
      - icmp
      - http
    serviceMonitor:
      enabled: true
      # scrape interval
      interval: "10s"
      # -- Relabeling configs for the ServiceMonitor hubble
      relabelings:
        - action: replace
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: node
          replacement: ${1}
    # Grafana Dashboards
    dashboards:
      enabled: true
      annotations:
        grafana_folder: Cilium
  relay:
    enabled: true
    rollOutPods: true
    # Enable Prometheus for hubble-relay
    prometheus:
      enabled: true
      serviceMonitor:
        enabled: true
  ui:
    enabled: true
    rollOutPods: true
    ingress:
      enabled: true
      annotations:
        # Enable external authentication using Oauth2-proxy
        nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy.picluster.ricsanfre.com/oauth2/start?rd=https://$host$request_uri
        nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.oauth2-proxy.svc.cluster.local/oauth2/auth
        nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
        nginx.ingress.kubernetes.io/auth-response-headers: Authorization

        # Enable cert-manager to create automatically the SSL certificate and store in Secret
        # Possible Cluster-Issuer values:
        #   * 'letsencrypt-issuer' (valid TLS certificate using IONOS API)
        #   * 'ca-issuer' (CA-signed certificate, not valid)
        cert-manager.io/cluster-issuer: letsencrypt-issuer
        cert-manager.io/common-name: hubble.picluster.ricsanfre.com
      className: nginx
      hosts: ["hubble.picluster.ricsanfre.com"]
      tls:
        - hosts:
          - hubble.picluster.ricsanfre.com
          secretName: hubble-tls

