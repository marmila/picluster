{{- range $index, $stack := .Values.stacks }}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ $stack.name }}
  namespace: {{ $.Release.Namespace }}
spec:
  generators:
    - git:
        repoURL: {{ $.Values.gitops.repo }}
        revision: {{ $.Values.gitops.revision }}
        directories:
          - path: argocd/{{ $stack.name }}/*
  template:
    metadata:
      name: '{{ `{{path.basename}}` }}'
      annotations:
        argocd.argoproj.io/sync-wave: '{{ $stack.wave }}'
    spec:
      destination:
        name: in-cluster
        namespace: '{{ default `{{path.basename}}` $stack.namespace }}'
      project: default
      source:
        repoURL: {{ $.Values.gitops.repo }}
        path: '{{ `{{path}}` }}'
        targetRevision: {{ $.Values.gitops.revision }}
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          limit: 10
          backoff:
            duration: 1m
            factor: 2
            maxDuration: 16m
        syncOptions:
          - CreateNamespace=true
      ignoreDifferences:
        - group: apiextensions.k8s.io
          kind: CustomResourceDefinition
          name: authorizationpolicies.policy.linkerd.io
          jsonPointers:
          - /spec/names/shortNames
        - group: apiextensions.k8s.io
          kind: CustomResourceDefinition
          name: meshtlsauthentications.policy.linkerd.io
          jsonPointers:
          - /spec/names/shortNames
        - group: apiextensions.k8s.io
          kind: CustomResourceDefinition
          name: networkauthentications.policy.linkerd.io
          jsonPointers:
          - /spec/names/shortNames
{{- end }}