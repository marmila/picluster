# Linkerd Middlewares
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: l5d-header-middleware-prometheus
  namespace: {{ .Release.Namespace }}
spec:
  headers:
    customRequestHeaders:
      l5d-dst-override: "kube-prometheus-stack-prometheus.{{ .Release.Namespace }}.svc.cluster.local:9090"

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: l5d-header-middleware-alertmanager
  namespace: {{ .Release.Namespace }}
spec:
  headers:
    customRequestHeaders:
      l5d-dst-override: "kube-prometheus-stack-alertmanager.{{ .Release.Namespace }}.svc.cluster.local:9093"

---
#Linkerd middleware
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: l5d-header-middleware-grafana
  namespace: {{ .Release.Namespace }}
spec:
  headers:
    customRequestHeaders:
      l5d-dst-override: "kube-prometheus-stack-grafana.{{ .Release.Namespace }}}.svc.cluster.local:80"

---
# Strip prefix middleware

apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: stripprefix
  namespace: {{ .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - "/prometheus"
      - "/alertmanager"
      - "/grafana"
    forceSlash: false

---
# Basic-auth middleware
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: basic-auth
  namespace: {{ .Release.Namespace }}
spec:
  basicAuth:
    secret: basic-auth-secret

---
# Create certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: monitoring-cert
  namespace: {{ .Release.Namespace }}
spec:
  secretName: monitoring-secret
  issuerRef:
    name: {{ .Values.monitoring.ingress.certmanager.tlsIssuer }}-issuer
    kind: ClusterIssuer
  commonName: {{ .Values.monitoring.ingress.host }}
  dnsNames:
  - {{ .Values.monitoring.ingress.host }}
  privateKey:
    algorithm: ECDSA

---
# IngressRoute https
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: monitoring-https
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`{{ .Values.monitoring.ingress.host }}`) && PathPrefix(`/prometheus`)
    services:
    - name: kube-prometheus-stack-prometheus
      port: 9090
      namespace: {{ .Release.Namespace }}
    middlewares:
      - name: basic-auth
        namespace: {{ .Release.Namespace }}
      - name: stripprefix
        namespace: {{ .Release.Namespace }}
      - name: l5d-header-middleware-prometheus
        namespace: {{ .Release.Namespace }}
  - kind: Rule
    match: Host(`{{ .Values.monitoring.ingress.host }}`) && PathPrefix(`/alertmanager`)
    services:
    - name: kube-prometheus-stack-alertmanager
      port: 9093
      namespace: {{ .Release.Namespace }}
    middlewares:
      - name: basic-auth
        namespace: {{ .Release.Namespace }}
      - name: stripprefix
        namespace: {{ .Release.Namespace }}
      - name: l5d-header-middleware-alertmanager
        namespace: {{ .Release.Namespace }}
  - kind: Rule
    match: Host(`{{ .Values.monitoring.ingress.host }}`) && PathPrefix(`/grafana`)
    services:
    - name: kube-prometheus-stack-grafana
      port: 80
      namespace: {{ .Release.Namespace }}
    middlewares:
      - name: stripprefix
        namespace: {{ .Release.Namespace }}
      - name: l5d-header-middleware-grafana
        namespace: {{ .Release.Namespace }}
  tls:
    secretName: monitoring-secret