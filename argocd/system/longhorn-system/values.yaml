
# Backup S3 backend URL
backup:
  minioUrl: "https://s3.ricsanfre.com:9091"

# Prometheus servicemonitor configuration
serviceMonitor:
  enable: true
  release: monitoring

#####################
# longhorn subchart
#####################

longhorn:
  defaultSettings:
    defaultDataPath: "/storage"
    # Backup S3 configuration
    backupTarget: "s3://k3s-longhorn@eu-west-1/"
    backupTargetCredentialSecret: longhorn-minio-secret
  # Disable pre-upgrade checks job. It makes longhorn installation fails with ArgoCD
  preUpgradeChecker:
    jobEnabled: false

  # Ingress Resource. Longhorn dashboard.
  ingress:
    ## Enable creation of ingress resource
    enabled: true
    ## Add ingressClassName to the Ingress
    ingressClassName: nginx
   
    # ingress host
    host: longhorn.picluster.ricsanfre.com

    ## Set this to true in order to enable TLS on the ingress record
    tls: true

    ## TLS Secret Name
    tlsSecret: longhorn-tls

    ## Default ingress path
    path: /

    ## Ingress annotations
    annotations:

      # Enable external authentication using Oauth2-proxy
      nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy.picluster.ricsanfre.com/oauth2/start?rd=https://$host$request_uri
      nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.oauth2-proxy.svc.cluster.local/oauth2/auth
      nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
      nginx.ingress.kubernetes.io/auth-response-headers: Authorization

      # Linkerd configuration. Configure Service as Upstream
      nginx.ingress.kubernetes.io/service-upstream: "true"
      # Enable cert-manager to create automatically the SSL certificate and store in Secret
      # Possible Cluster-Issuer values: 
      #   * 'letsencrypt-issuer' (valid TLS certificate using IONOS API) 
      #   * 'ca-issuer' (CA-signed certificate, not valid)
      cert-manager.io/cluster-issuer: letsencrypt-issuer
      cert-manager.io/common-name: longhorn.picluster.ricsanfre.com
