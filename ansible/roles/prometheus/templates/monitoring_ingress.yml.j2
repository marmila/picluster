{% if enable_linkerd is sameas true %}
# Linkerd Middlewares
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: l5d-header-middleware-prometheus
  namespace: {{ k3s_monitoring_namespace }}
spec:
  headers:
    customRequestHeaders:
      l5d-dst-override: "kube-prometheus-stack-prometheus.{{ k3s_monitoring_namespace }}.svc.cluster.local:9090"

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: l5d-header-middleware-alertmanager
  namespace: {{ k3s_monitoring_namespace }}
spec:
  headers:
    customRequestHeaders:
      l5d-dst-override: "kube-prometheus-stack-alertmanager.{{ k3s_monitoring_namespace }}.svc.cluster.local:9093"

---

apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: l5d-header-middleware-grafana
  namespace: {{ k3s_monitoring_namespace }}
spec:
  headers:
    customRequestHeaders:
      l5d-dst-override: "kube-prometheus-stack-grafana.{{ k3s_monitoring_namespace }}.svc.cluster.local:80"

{% endif %}
---
# Strip prefix middleware

apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: stripprefix
  namespace: {{ k3s_monitoring_namespace }}
spec:
  stripPrefix:
    prefixes:
      - "/prometheus"
      - "/alertmanager"
      - "/grafana"
    forceSlash: false

# Create certificate
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: monitoring-cert
  namespace: {{ k3s_monitoring_namespace }}
spec:
  secretName: monitoring-secret
  issuerRef:
    name: {{ tls_issuer }}-issuer
    kind: ClusterIssuer
  commonName: {{ monitoring_dns }}
  dnsNames:
  - {{ monitoring_dns }}
  privateKey:
    algorithm: ECDSA

---
# IngressRoute http redirect
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: monitoring-http
  namespace: {{ k3s_monitoring_namespace }}
spec:
  entryPoints:
    - web
  routes:
  - kind: Rule
    match: Host(`{{ monitoring_dns }}`)
    priority: 1
    middlewares:
      - name: redirect
        namespace: {{ k3s_traefik_namespace }}
    services:
      - kind: TraefikService
        name: noop@internal

---
# IngressRoute https
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: monitoring-https
  namespace: {{ k3s_monitoring_namespace }}
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`{{ monitoring_dns }}`) && PathPrefix(`/prometheus`)
    services:
    - name: kube-prometheus-stack-prometheus
      port: 9090
      namespace: {{ k3s_monitoring_namespace }}
    middlewares:
      - name: basic-auth
        namespace: {{ k3s_traefik_namespace }}
      - name: stripprefix
        namespace: {{ k3s_monitoring_namespace }}
      - name: l5d-header-middleware-prometheus
        namespace: {{ k3s_monitoring_namespace }}
  - kind: Rule
    match: Host(`{{ monitoring_dns }}`) && PathPrefix(`/alertmanager`)
    services:
    - name: kube-prometheus-stack-alertmanager
      port: 9093
      namespace: {{ k3s_monitoring_namespace }}
    middlewares:
      - name: basic-auth
        namespace: {{ k3s_traefik_namespace }}
      - name: stripprefix
        namespace: {{ k3s_monitoring_namespace }}
      - name: l5d-header-middleware-alertmanager
        namespace: {{ k3s_monitoring_namespace }}
  - kind: Rule
    match: Host(`{{ monitoring_dns }}`) && PathPrefix(`/grafana`)
    services:
    - name: kube-prometheus-stack-grafana
      port: 80
      namespace: {{ k3s_monitoring_namespace }}
    middlewares:
      - name: stripprefix
        namespace: {{ k3s_monitoring_namespace }}
      - name: l5d-header-middleware-grafana
        namespace: {{ k3s_monitoring_namespace }}
  tls:
    secretName: monitoring-secret
