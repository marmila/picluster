---

# Patch Dashboard json if needed.
# Check if json file contains DS_PROMETHEUS variable defined and patch json file
# See issue #18

- name: Patching dashboard {{ dashboard_name }} | Initialize loop variables
  set_fact:
    dashboard_name: "{{ dashboard_file | basename | splitext | first }}"
    dashboard_file_name: "{{ dashboard_file | basename }}"
    dashboard_content: "{{ lookup('file', dashboard_file) | from_json }}"
    input_detected: false
    input_variable: false

- name: Patching dashboard {{ dashboard_name }} | Check if __inputs key exits within json dashboard
  set_fact:
    input_detected: true
  when: dashboard_content.__inputs is defined

- name: Patching dashboard {{ dashboard_name }} | Detect if variable DS_PROMETHEUS exits
  set_fact:
    input_variable: "{{ dashboard_content.__inputs | selectattr('name','==', 'DS_PROMETHEUS') | length > 0 }}"
  when: input_detected

- name: Patching dashboard {{ dashboard_name }} | Generating patch templating.list code block to add DS_PROMETHEUS variable
  set_fact:
    patch: "{{   [{ 'hide': 0,
                   'label': 'datasource',
                   'name': 'DS_PROMETHEUS',
                   'options': [],
                   'query': 'prometheus',
                   'refresh': 1,
                   'regex': '',
                   'type': 'datasource' }] + dashboard_content.templating.list }}"
  when: input_variable

- name: Patching dashboard {{ dashboard_name }} | Patch json dashboard file
  set_fact:
    dashboard_content: "{{ dashboard_content | combine(new_item, recursive=true) }}"
  vars:
    new_item: "{{ { 'templating': { 'list':  patch } } }}"
  when: input_variable

- name: "Patching dashboard {{ dashboard_name }} | Copying to patching directory"
  copy:
    dest: "temp/{{ dashboard_file_name }}"
    content: "{{ dashboard_content | to_nice_json(indent=2) }}"
  when: input_variable
