---

- name: Bootstrap Cluster
  hosts: k3s_master
  gather_facts: false

  collections:
    - kubernetes.core

  environment:
    # The location of the kubeconfig file on the master.
    K8S_AUTH_KUBECONFIG: ~/.kube/config

  vars_prompt:
    - name: ionos_public_prefix
      prompt: Enter ionos public prefix
      private: true
    - name: ionos_secret
      prompt: Enter ionos secret
      private: true

  pre_tasks:
    # Install kubernetes core collection dependencies (kubernetes python package) using PIP.
    - name: Ensure PIP is installed.
      package:
        name:
          - python3-pip
          - python3-setuptools
        state: present
      become: true
      tags: ['always']

    - name: Ensure kubernetes Python library is installed.
      pip:
        name: kubernetes
        state: present
      become: true
      tags: ['always']

    # Install Helm diff plugin to have a better idempotence check
    - name: Intall Helm Plugin
      kubernetes.core.helm_plugin:
        plugin_path: "https://github.com/databus23/helm-diff"
        state: present
      tags: ['always']

    - name: Include vault variables
      include_vars: "vars/vault.yml"
      tags: ["always"]
    - name: Include picluster variables
      include_vars: "vars/picluster.yml"
      tags: ["always"]

  tasks:
    - name: Create namespaces.
      kubernetes.core.k8s:
        name: "{{ item }}"
        api_version: v1
        kind: Namespace
        state: present
      with_items:
        - "argocd"
        - "cert-manager"
        - "longhorn-system"
        - "velero"

    - name: Configure secrets
      kubernetes.core.k8s:
        definition: "{{ lookup('template', 'argocd/external/templates/' + item ) }}"
        state: present
      with_items:
        - ionos_secret.yml.j2
        - longhorn_minio_secret.yml.j2
        - velero_secret.yml.j2

    - name: Copy argocd and root chart files
      ansible.builtin.copy:
        src: "argocd/{{ item }}"
        dest: /tmp/charts
      with_items:
        - "bootstrap/argocd"
        - "bootstrap/root"

    - name: Update argo-cd helm dependency.
      ansible.builtin.command:
        cmd: "helm dependency update /tmp/charts/argocd"

    - name: Deploy Argo CD Helm chart.
      shell: |
        set -o pipefail
        helm template \
        --dependency-update \
        --include-crds \
        --namespace argocd \
        argocd /tmp/charts/argocd \
        | kubectl apply -n argocd -f -
      args:
        executable: /bin/bash

    - name: Wait for CRDs to be ready
      command:
        cmd: "kubectl wait --for condition=Established crd/applications.argoproj.io crd/applicationsets.argoproj.io --timeout=600s"
      register: linkerd_pods_ready
      changed_when: false

    - name: Deploy root Helm chart.
      shell: |
        set -o pipefail
        helm template \
        --dependency-update \
        --include-crds \
        --namespace argocd \
        bootstrap /tmp/charts/root \
        | kubectl apply -n argocd -f -
      args:
        executable: /bin/bash
    
    - name: Recursively remove tmp directory
      ansible.builtin.file:
        path: /tmp/charts
        state: absent