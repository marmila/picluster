---
- name: Create prometheus namespace.
  kubernetes.core.k8s:
    name: "{{ k3s_monitoring_namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: Annotate namespace to enable linkerd
  kubernetes.core.k8s:
    definition:
      kind: Namespace
      apiVersion: v1
      metadata:
        name: "{{ k3s_monitoring_namespace }}"
        annotations:
          linkerd.io/inject: enabled
  when: enable_linkerd

- name: Add prometheus community chart repo.
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: "https://prometheus-community.github.io/helm-charts"

- name: Deploy prometheus-stack Helm chart.
  kubernetes.core.helm:
    name: kube-prometheus-stack
    chart_ref: prometheus-community/kube-prometheus-stack
    chart_version: "{{ kube_prometheus_stack_chart_version }}"
    release_namespace: "{{ k3s_monitoring_namespace }}"
    update_repo_cache: true
    state: present
    values: "{{ lookup('template', 'templates/prometheus_stack_helm_values.yml.j2') | from_yaml }}"

- name: Wait for pods to be ready
  command:
    cmd: "kubectl wait --for=condition=Ready pod --namespace={{ k3s_monitoring_namespace }} --all --timeout=600s"
  register: prometheus_pods_ready
  changed_when: false

- name: Create metrics services (K3s, Minio an External Nodes)
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'templates/' + item ) }}"
    state: present
  with_items:
    - k3s_service_metrics.yml.j2
    - minio_service_metrics.yml.j2
    - external_node_service_metrics.yml.j2

- name: Generate minio prometheus bearer token
  include_tasks: tasks/create_minio_bearer_token.yml
  args:
    apply:
      delegate_to: node1
      become: false

- name: Create Ingress rule for Prometheus, Alertmanager and Graphana UI
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'templates/' + item ) }}"
    state: present
  with_items:
    - monitoring_ingress.yml.j2

- name: Configure Service Monitors
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'templates/' + item ) }}"
    state: present
  with_items:
    - traefik_servicemonitor.yml.j2
    - longhorn_servicemonitor.yml.j2
    - k3s_servicemonitor.yml.j2
    - velero_servicemonitor.yml.j2
    - minio_servicemonitor.yml.j2
    - fluentbit_servicemonitor.yml.j2
    - fluentd_servicemonitor.yml.j2
    - elasticsearch_servicemonitor.yml.j2


- name: Configure Prometheus rules
  include_tasks: configure_prometheus_rules.yml
  loop_control:
    loop_var: rules_file
  with_fileglob:
    - "rules/*"

- name: Configure Grafana Dashboards
  include_tasks: configure_grafana_dashboards.yml
  loop_control:
    loop_var: dashboard_file
  with_fileglob:
    - "dashboards/*"
    - "dashboards/linkerd/*"
    - "dashboards/k3s/*"
