---

- name: Install certbot in localhost and create minio certificate
  hosts: localhost
  gather_facts: true
  vars:
    certbot_venv: "{{ playbook_dir }}/certificates"
    certbot_email: "{{ acme_issuer_email }}"
    dns_ionos_prefix: "{{ vault.certmanager.ionos.public_prefix }}"
    dns_ionos_secret: "{{ vault.certmanager.ionos.secret }}"
  pre_tasks:
    # Include vault variables
    - name: Include vault variables
      include_vars: "vars/vault.yml"
      tags: ["always"]
    # Include picluster variables
    - name: Include picluster variables
      include_vars: "vars/picluster.yml"
      tags: ["always"]
  roles:
    - role: certbot
      vars:
        - install_python_packages: false
      when: enable_letsencrypt_acme_dns01

  tasks:
    - name: Create Letsencrytp certificate for minio
      command: "{{ certbot_venv }}/certbot-create-cert.sh {{ minio_hostname }}"
      register: certbot_create
      changed_when:
        - certbot_create.rc==0
        - '"Certificate not yet due for renewal; no action taken." not in certbot_create.stdout'
      when: enable_letsencrypt_acme_dns01

- name: Configure Backup Server - S3 Storage
  hosts: node1
  gather_facts: true
  tags: [backup]
  become: true
  vars:
    server_hostname: "{{ minio_hostname }}"
    ssl_key_size: 4096
    ssl_certificate_provider: selfsigned
    key_type: RSA
    country_name: ES
    email_address: admin@ricsanfre.com
    organization_name: Ricsanfre
    certbot_venv: "{{ playbook_dir }}/certificates"

  pre_tasks:
    # Include vault variables
    - name: Include vault variables
      include_vars: "vars/vault.yml"
      tags: ["always"]
    # Include picluster variables
    - name: Include picluster variables
      include_vars: "vars/picluster.yml"
      tags: ["always"]

    - name: Create customCA-signed TLS certificate for minio
      block:
        # Generate custom CA
        - name: Generate custom CA
          include_tasks: tasks/generate_custom_ca.yml
          args:
            apply:
              delegate_to: localhost
              become: false
        # Generate selfsigned TLS certificate
        - name: Generate customCA-signed SSL certificates for minio
          include_tasks: tasks/generate_ca_signed_cert.yml
          args:
            apply:
              delegate_to: localhost
              become: false
        # Load tls key and cert into variables
        - name: Load tls key and cert
          set_fact:
            minio_key: "{{ lookup('file','certificates/' + server_hostname + '.key') }}"
            minio_cert: "{{ lookup('file','certificates/' + server_hostname + '.pem') }}"
      when: not enable_letsencrypt_acme_dns01

    - name: Get letsencrypt TLS certificate for minio
      block:
        - name: check TLS certificate for minio exits
          command: "{{ certbot_venv }}/certbot-wrapper.sh certificates -d {{ minio_hostname }}"
          register: certbot_certificates
          delegate_to: localhost
          become: false
          changed_when: false
          failed_when:
            - '"Certificate Name: " + minio_hostname not in certbot_certificates.stdout'
        - name: Get certificate and key paths for minio
          set_fact:
            cert_path: "{{ certbot_certificates.stdout | regex_search(regexp1,'\\1') }}"
            cert_key_path: "{{ certbot_certificates.stdout | regex_search(regexp2,'\\1') }}"
          vars:
            regexp1: 'Certificate Path: (\S+)'
            regexp2: 'Private Key Path: (\S+)'
          when:
            - certbot_certificates.rc==0
            - '"Certificate Name: " + minio_hostname in certbot_certificates.stdout'

        - name: Load tls key and cert
          set_fact:
            minio_key: "{{ lookup('file', cert_key_path[0] ) }}"
            minio_cert: "{{ lookup('file', cert_path[0] ) }}"
      when: enable_letsencrypt_acme_dns01

  tasks:
    - name: Include S3 configuration variables
      include_vars:
        file: vars/backup/s3_minio.yml
    - name: Configure Minio S3 server
      include_role:
        name: ricsanfre.minio

- name: Configure Pi-cluster nodes backup
  hosts: raspberrypi
  gather_facts: true
  tags: [backup]
  become: true
  pre_tasks:
    - name: Include vault variables
      include_vars: "vars/vault.yml"
      tags: ["always"]
    # Include picluster variables
    - name: Include picluster variables
      include_vars: "vars/picluster.yml"
      tags: ["always"]
    - name: Load CA certificate for restic
      set_fact:
        restic_ca_cert: "{{ lookup('file','certificates/CA.pem') }}"
      when: not enable_letsencrypt_acme_dns01
    - name: Do not use CA certificate
      set_fact:
        restic_use_ca_cert: false
      when: enable_letsencrypt_acme_dns01
  roles:
    - role: ricsanfre.backup
      tags: [backup]
